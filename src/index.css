/*
 * Tailwind CSS v4 Main Stylesheet
 *
 * This file consolidates configuration, base styles, and custom utilities
 * following Tailwind CSS v4's "CSS-First Configuration" approach.
 *
 * If you need to keep a `tailwind.config.js` for legacy reasons or complex JS-based
 * plugins, you'd add `@config "../../tailwind.config.js";` at the very top of this file
 * (adjust the path to your config file).
 */

@import "tailwindcss"; /* The single import for Tailwind CSS v4 */

/*
  * @theme directive for custom design tokens.
  * This replaces much of the 'theme.extend' from a traditional tailwind.config.js.
  * Variables defined here become available as utility classes.
  */
@theme {
  /* Font Families */
  --font-family-sans: "Inter", "Poppins", -apple-system, BlinkMacSystemFont,
    "Segoe UI", "Roboto", "Oxygen", "Ubuntu", "Cantarell", "Fira Sans",
    "Droid Sans", "Helvetica Neue", sans-serif;
  --font-family-mono: source-code-pro, Menlo, Monaco, Consolas, "Courier New",
    monospace;

  /* Custom Colors (based on your CSS) */
  --color-blue-dark: #1e3a8a; /* For scrollbar thumb and gradient */
  --color-blue-light: #3b82f6; /* For focus ring and gradient */
  --color-gray-100: #f1f1f1; /* For scrollbar track */
  --color-blue-hover: #1e40af; /* For scrollbar thumb hover */

  /* Default Transition */
  --transition-property-all: all;
  --transition-duration-default: 0.2s;
  --transition-timing-function-default: ease-in-out;

  /* Keyframes and Animations - Defined directly in @theme */
  @keyframes spin {
    from {
      transform: rotate(0deg);
    }
    to {
      transform: rotate(360deg);
    }
  }
  --animation-spin: spin 1s linear infinite;

  @keyframes fadeIn {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
  --animation-fade-in: fadeIn 0.6s ease-out; /* Note: Changed to fade-in as per your original CSS */

  /* Custom Box Shadows - Define names for shadows to use with 'shadow-yourname' */
  --shadow-btn-hover: 0 4px 12px rgba(0, 0, 0, 0.15);
  --shadow-card-hover: 0 10px 25px rgba(0, 0, 0, 0.1);

  /* Gradients - Defined directly in @theme as custom background images */
  --background-image-gradient-blue: linear-gradient(
    135deg,
    var(--color-blue-dark) 0%,
    var(--color-blue-light) 100%
  );
  --background-image-gradient-gold: linear-gradient(
    135deg,
    #f59e0b 0%,
    #eab308 100%
  );
}

/*
  * Base styles applied to global elements.
  * This is where you put your CSS resets and default element styling.
  */
@layer base {
  /* Universal reset (still valid CSS, preflight handles most of this) */
  * {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
  }

  /* Body styles using Tailwind utilities where possible */
  body {
    /* Use font-sans defined in @theme */
    @apply font-sans;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
  }

  /* Code font-family */
  code {
    /* Use font-mono defined in @theme */
    @apply font-mono;
  }

  /* Custom scrollbar styles */
  ::-webkit-scrollbar {
    width: 8px;
  }

  ::-webkit-scrollbar-track {
    background: theme(--color-gray-100);
  }

  ::-webkit-scrollbar-thumb {
    background: theme(--color-blue-dark);
    border-radius: 4px;
  }

  ::-webkit-scrollbar-thumb:hover {
    background: theme(--color-blue-hover);
  }

  /* Smooth transitions - applied globally using CSS variables from @theme */
  * {
    transition: var(--transition-property-all)
      var(--transition-duration-default)
      var(--transition-timing-function-default);
  }

  /* Custom table styles */
  table {
    border-collapse: collapse;
  }

  th,
  td {
    border-bottom: 1px solid theme(--color-gray-200); /* Assuming Tailwind's default gray-200 for #e5e7eb */
  }
}

/*
  * Custom components.
  * These are specific reusable styles you might define for components.
  */
@layer components {
  /* Custom button hover effects */
  .btn-hover {
    @apply transition-all duration-200 ease-in-out hover:-translate-y-0.5; /* approx -2px */
    box-shadow: theme(--shadow-btn-hover);
  }

  /* Custom card hover effect */
  .card-hover {
    @apply transition-all duration-200 ease-in-out hover:-translate-y-1; /* approx -4px */
    box-shadow: theme(--shadow-card-hover);
  }

  /* Mobile menu animation */
  @media (max-width: 768px) {
    .mobile-menu {
      transform: translateX(-100%);
      transition: transform 0.3s ease-in-out;
    }

    .mobile-menu.open {
      transform: translateX(0);
    }
  }

  /* Print styles */
  @media print {
    .no-print {
      display: none !important;
    }
  }
}

/*
  * Custom utilities.
  * These are usually one-off utilities that don't fit into existing Tailwind classes.
  */
@layer utilities {
  /* Apply loading animation directly using Tailwind's 'animate' prefix */
  .animate-spin-custom {
    animation: theme(--animation-spin);
  }

  /* Apply fade in animation directly using Tailwind's 'animate' prefix */
  .animate-fade-in-custom {
    animation: theme(--animation-fade-in);
  }

  /* Custom focus styles using Tailwind's built-in ring and border utilities */
  input:focus,
  select:focus,
  textarea:focus {
    @apply outline-none ring-2 ring-blue-500 border-transparent; /* Using Tailwind's default blue-500 for #3b82f6 */
  }

  /* Responsive text (can be handled more natively by Tailwind's responsive breakpoints) */
  /* For custom breakpoints or specific needs, this can be an explicit utility. */
  @media (max-width: 640px) {
    .text-responsive {
      font-size: 0.875rem; /* Equivalent to text-sm */
    }
  }

  /* Gradient backgrounds using Tailwind's bg-[...] arbitrary value syntax */
  /* Or by creating new utility classes if used frequently */
  .bg-gradient-blue {
    background-image: theme(--background-image-gradient-blue);
  }

  .bg-gradient-gold {
    background-image: theme(--background-image-gradient-gold);
  }
}
